---
layout: post
title:  "네트워크 정리"
date:   2018-10-12 19:30:32 +0900
---

### 1.
---


### 2.
---


### 3. 데이터 통신 기초
* 데이터란?
	- 네트워크
		1) 통신 매체로 연결해서 컴퓨터와 컴퓨터끼리 데이터를 주고받는 것
		2) 컴퓨터나 사용자가 가진 리소스를 공유하기 위해 존재
		3) 그래서 이루어지는 것이 데이터 통신

	- 데이터
		1) 무언가에 대한 정보를 컴퓨터상에 표현한 것(파일, 홈페이지 정보 등)
		2) 데이터를 주고 받으면서 리소스 공유가 실현

* 데이터 통신
	- 컴퓨터에서 데이터는 비트라는 단위로 표현

	- 인터페이스
		1) 컴퓨터와 통신매체의 중개를 담당하기 위한 전용기기
		2) 통신매체에 따라 데이터의 표현 방법이 다르다. 일반적인 케이블이라면 전기신호

	- 프로토콜
		1) 데이터를 주고받기 위한 규칙
		2) 데이터를 보내는 쪽과 받는 쪽이 같은 프로토콜을 사용

* 정리
	- 네트워크는 데이터를 주고받는 작업
	- 이 작업을 위한 방법이 데이터 통신
	- 데이터 통신을 하기위해서는 인터페이스와 프로토콜이 필요


---


### 4. 회선 교환과 패킷 교환
* 회선 교환
	- 전화기의 방식과 마찬가지로 교환기를 사용하여 연결 회선을 교체하는 방식
	- 교환기의 회선이 모두 점유되면 더 이상 통신을 할 수 없다
	- 다수의 컴퓨터가 동시에 자유롭게 정보를 송수신하기에는 부적합

* 패킷 교환
	- 송신하고 싶은 데이터를 일괄적으로 보내지 않고 여럿으로 분할하여 송신하는 방식
	- 분할한 데이터를 패킷(Packet)이라고 부른다
	- 큰 데이터를 작게 나누어 송신하므로 패킷 1개를 보내는 시간이 짧다.
	- 그러므로 패킷 1개가 회선을 점유하는 시간이 짧다.
	- 어느 한 수신처의 데이터가 회선을 점유하지 않고 다른 수신처의 데이터와 섞여서 송신된다
	- 다수의 컴퓨터가 회선을 공유 가능
	- 컴퓨터 네트워크는 패킷 교환 방식을 사용

* 정리
	- 데이터 통신에는 회선 교환과 패킷 교환이 존재
	- 회선 교환은 파이프를 교체하는 방식
	- 패킷 교환은 데이터를 패킷으로 분할하여 송신하는 방식
	- 컴퓨터 네트워크는 패킷 교환 방식
	- 동시 통화 수 만큼 회선이 필요했던 전화 회선과는 달리 회선 1개로도 다수 통신 가능


---


### 5. 네트워크의 구조
* 통신에 필요한 기기
	- 컴퓨터 : 데이터를 작성, 송신, 수신
	- 통신 매체
	- 인터페이스
	- 패킷 교환기 : 실제 네트워크에서는 라우터(Router)라는 기기가 패킷 교환기 역할을 함

* Multi Access Network 와 Point to Point Network
	- 패킷 교환없이 케이블 분배기로 연결되는 범위를 세그먼트라고 함
		1) 이 세그먼트 범위 내에 있는 컴퓨터는 패킷교환없이 직접 데이터를 송수신 가능
	- 허브(Hub)라는 기기를 사용하여 세그먼트를 생성
		1) 허브를 사용한 네트워크에서는 컴퓨터가 세그먼트 내의 어떤 컴퓨터로도 자유롭게 데이터 송수신 가능
		2) 이런 네트워크 구조를 Multi Access Network라고 한다
	- Point to Point Network : 컴퓨터 한 대가 다른 한 대의 컴퓨터에만 데이터를 보내는 방식
	- 멀티엑세스 네트워크와 포인트 투 포인트 네트워크를 조합해서 네트워크 전체가 구성

* 정리
	- 패킷 교환 네트워크는 컴퓨터, 통신 매체, 인터페이스, 라우터로 구성
	- 네트워크에는 멀티엑세스 네트워크, 포인트 투 포인트 네트워크 두 종류가 있음
	- 이 두 종류가 조합되어 네트워크 전체가 구성


---


### 6. LAN과 WAN
* 네트워크의 범위
	- 멀티엑세스 네트워크 , 포인트 투 포인트 네트워크는 네트워크를 구조 측면에서 분류한 것
	- 네트워크의 범위나 규모로 네트워크를 분류하는 방식도 존재
	- LAN(Local Area Network) : 가정, 사무실, 빌딩 같은 구내에 설치된 네트워크

* WAN
	- LAN과 다른 지역의 LAN을 연결하기 위해서는 통신매체, 즉 케이블이 연결되어야한다.
	- 하지만 구내를 벗어난 지역에 마음대로 케이블을 연결하는 것은 불법
	- 따라서 통신사업자(KT, SK, LG)가 설치한 통신용 케이블을 이용하여 다른 LAN과 연결
	- 데이터 통신 서비스를 제공하는 통신사업자의 케이블에 데이터를 전송할 권리를 구입해서 네트워크를 구축
	- 이런 네트워크가 WAN(Wide Area Network)

* 정리
	- 자신의 책임으로 좁은 범위에서 만드는 것이 LAN이다
	- 넓은 범위에서 통신사업자로부터 케이블을 빌려서 만들어지는 것이 WAN이다
	- 세계 최대 규모의 WAN은 인터넷이다


---


### 7. OSI 참조 모델(Open Systems Interconnection Reference Model)
* OSI 참조 모델이란?
	- 데이터 통신 전체를 표준화하기 위한 단계 구성도
	- 데이터 통신을 단계로 나누어 각 단계의 순서를 명확히하고 이 모델에 따라 프로토콜을 정의
	- 하지만 표준화는 실패

* OSI 참조 모델
	- 데이터 통신을 7개의 단계로 나눈다

	 +---------------------------------------------------------------------------- -----+
  	| 제7계층 |    응용계층    | 사용자에게 네트워크 서비스를 제공한다     |              |
	  |------------------------------------------------------------------|              |
	  | 제6계층 |    표현계층    | 데이터의 형식을 결정한다                 |   내용표현    |
	  |------------------------------------------------------------------|              |
	  | 제5계층 |    세션계층    | 데이터 송수신의 순서 등을 관리한다        |              |
	  |------------------------------------------------------------------|--------------|
	  | 제4계층 |    전송계층    | 신뢰성이 높은(에러가 적은) 전송을 시행    |              |
	  |------------------------------------------------------------------|     전송물    |
	  | 제3계층 | 네트워크계층  | 전송 규칙과 수신처를 결정한다              |              |
	  |------------------------------------------------------------------|--------------|
	  | 제2계층 |데이터링크계층| 인접기기 사이의 전송을 제어한다             |               |
	  |------------------------------------------------------------------|     전송      |			
	  | 제1계층 |    물리계층   | 전기 기계적인 부분의 전송을 시행한다       |               |
	 +-----------------------------------------------------------------------------------+

	- 송신측에서는 7계층부터 1계층 순서대로
	- 수신측에서는 1계층부터 7계층 순서대로 역할을 수행한다
	- 각 계층은 독립적
	- 다른 계층은 고려할 필요 없음
	- 어떤 계층의 프로토콜 변경은 다른 계층에 영향을 끼치지 않는다
	- 하위 계층은 상위 계층을 위해서 일하고 상위 계층은 하위 계층에 관여하지 않는다

* 정리
	- 데이터 통신은 OSI 참조 모델에 의한 '단계와 순서'로 이해한다
	- OSI 참조 모델은 일곱개의 계층으로 나뉘어 있으며 각각은 독립해 있다
	- 하위 계층은 상위 계층을 위해 일하고 상위 계층은 하위 계층에 대해 관여하지 않는다


---


### 8. 캡슐화
* 순서의 흐름
	- 택배를 예를들어 보자
	- 운반할 물품에 운송에 필요한 것을 덧붙여 함께 운송한다
	- 운반물 + (완충재 + 상자 + 택배 송장)
	- 데이터를 전송할 때도 운반하는 데이터 이외에 다른 것이 필요하다
	- 데이터와 데이터를 보내기 위해 필요한 것으리 통합된 상태를 프로토콜 데이터 유닛(Protocol Data Unit:PDU)라 한다

* 캡슐화
	- OSI 계층을 거칠때마다 필요한 정보를 추가할 수 있다
	- 운반하고 싶은 데이터에 헤더를 추가해 캡술을 만들어 간다

	사용자
	---------------------------------------------------------

	5~7계층                    7계층의 제어 데이터-->데이터
	--------------------------------------------------|------
	                                                  V
	4계층                       4계층의 제어 데이터--> 메시지
	--------------------------------------------------|------  
				                                    		    V
	3계층		      	3계층의 제어 데이터--> 세그먼트, 데이터그램
	------------------------------------------|--------------
							                              V
	2계층         2계층의 제어 데이터--> 데이터그램 <--2계층의 제어 데이터
	------------------------------------------|------------------------
					                                  V
	1계층			           	                  프레임

* 정리
	- 데이터를 송신할 때는 보내고 싶은 데이터 뿐만 아니라 제어용 정보도 필요하다
	- 계층의 순서대로 헤더가 부가되어가는 것을 캡슐화라고 한다
	- 수신한 쪽은 반대의 순서로 헤더를 벗겨서 데이터를 입수한다


     ---


### 9. 프로토콜
* 프로토콜이란?
	- 상위 프로토콜과 하위 프로토콜 간의 데이터를 전송할 수 있는 구조를 인터페이스라고 부른다
	- 앞에서 케이블과 컴퓨터의 중개 역할을 하는 인터페이스와 마찬가지로 프로토콜 간에도 인터페이스라는 용어를 사용한다
	- 프로토콜군 : 상위 하위 프로토콜을 연결하는 인터페이스를 가지고 있는 프로토콜 그룹
	- 데이터 통신은 같은 프로토콜군을 사용하는 컴퓨터나 기기끼리만 가능

* 프로토콜이 결정하는 것
	- 데이터 사용 방법 결정
	- 어떤 헤더를 붙일지 결정
	- 데이터를 송수신하는 순서와 내용을 결정
	- OSI 프로토콜을 대신해 가장 많이 사용되는 것은 TCP/IP 프로토콜군
	- TCP/IP 프로토콜군은 인터넷에서 사용되는 프로토콜이다

* 정리
	- 계층마다 존재하는 프로토콜 그룹을 프로토콜군이라고 한다
	- 프로토콜은 '데이터의 내용을 결정'하고, '헤더를 결정'하고, '송수신 순서를 결정'한다.
	- 사실표준으로써 TCP/IP 프로토콜군이 사용된다


 ---


### 10. TCP/IP 모델
* TCP/IP 모델
	- TCP/IP 모델과 OSI 참조 모델은 전혀 관계가 없음
	- 다만 데이터 통신이라는 관점에서 비슷한 모델

	 +---------------------------------+
  	| 제4계층 |    애플리케이션계층    |
	  |--------------------------------|
	  | 제3계층 |    트랜스포트계층      |
	  |--------------------------------|
	  | 제2계층 |    인터넷계층         |
	  |--------------------------------|
	  | 제1계층 |    인터페이스계층      |
	 +---------------------------------+

* TCP/IP 프로토콜군
	- 애플리케이션계층(제4계층)
		1) HTTP(Hyper Text Transfer Protocol: 홈페이지 열람)
		2) FTP(File Transfer Protocol: 파일전송)
		3) SMTP(Simple Mail Transfer Protocol: 전자메일 송수신)
	- 트랜스포트계층(제3계층)
		1) TCP(Transmission Control Protocol)
		2) UDP(User Datagram Protocol)
	- 인터넷계층(2계층)
		1) IP(Internet Protocol)
		2) ARP(Address Resolution Protocol)
	- 인터페이스계층(1계층)
		1) 이더넷(Ethernet)
		2) 프레임 릴레이(Frame-Relay)
		3) PPP(Point to Point Protocol)

* 정리
	- TCP/IP 모델에서 TCP/IP 프로토콜이 제정되었다
	- TCP/IP 모델은 4개의 계층으로 이루어진다

 ---

### 11. 1계층의 역할과 개요
* 전기 기계적인 전송
  - 케이블이 연결되어 있는 기기에 신호를 전달하는 것이 1계층의 역할

* 통신 매체
  - 신호가 지나는 파이프 역할을 하는 것이 **통신 매체**
  - 케이블에는 전기신호를 사용하는 **동선** 과 광신호를 사용하는 **광파이버** 가 있음
  - 일반적으로 동선케이블(UTP : Unshielded Twist Pair cable)을 사용
  - UTP는 두개가 한쌍인 동선 네 쌍으로 구성(총 8개의 동선)
  - 광파이버는 신호의 안정과 통신속도에서는 우수하지만 선을 굽히기 어려움
  - 반면 동선은 굽히기 쉬워 배선에 유리
  - 네트워크에 사용되는 기기는 사용할 케이블과 케이블에서 사용할 신호에 맞춘 **인터페이스** 가 필요
  - LAN용 케이블에 접속하기 위한 인터페이스로는 **NIC(일명 LAN카드)** 가 일반적

* 정리
  - 1계층의 역할은 케이블이 연결되어 있는 기기에 신호를 전달하는 것
  - 1계층의 역할에 의해 상대에게 데이터가 전달
  - 케이블은 동선 UTP와 광파이버가 존재

---

### 12. 신호와 충돌
* 신호
  - 인터페이스
      1) 컴퓨터와 통신 매체를 중개
      2) **비트를 신호로, 신호를 비트로 변환**
  - 신호에는 아날로그 신호와 디지털 신호가 존재
  - 신호의 형태와 전송방법에 따라 **통신속도** 가 결정
  - 통신속도는 일반적으로 **1초 동안 전해지는 비트 수** 로 표현
  - 단위는 **bps(bit per second)**
  - 통신속도는 **'1초 동안의 신호의 횟수'** 와 **'1회 신호의 비트수'** 로 정해진다
  - 1회 신호의 비트수 : 신호의 크기에 따라 차등을 두어서 신호 한번에 여러비트를 표현

* 신호에 발생하는 문제 3가지
  - 신호의 감쇠
      1) 동선의 저항에 의해 긴 케이블을 지나는 동안 신호가 약해짐
      2) 따라서 약해진 신호의 **진폭을 증폭** 하는 기계를 중간에 설치
  - 노이즈/간섭
      1) 전기 신호가 어떤 윈인에 의해 형태가 무너지는 현상
  - 충돌
      1) 신호가 보내지고 있는 도중에 다른 신호를 보내는 경우 발생
      2) **두 개의 신호가 뒤섞여서 신호의 진폭이 붕괴**
      3) 신호를 보내는 타이밍을 서로 엇갈리게 하여 충돌현상 방지

* 정리
  - 비트를 신호로 바꾸어 케이블에 보냄으로써 상대에게 전달
  - 신호의 형태나 전송 방법에 의해 통신속도가 결정
  - 신호는 감쇠, 노이즈/간섭, 충돌 등의 문제가 발생


---


### 13. 허브
* 허브의 기능
  - 허브에 케이블로 연결되어 있는 기기는 동일 케이블에 연결되어 있는 것과 같은 취급
  - 허브의 첫 번째 기능은 **신호의 증폭과 재생**
  - 허브의 두 번째 기능은 **복수의 기기를 연결해서 네트워크를 구축**
      1) 허브에 연결되어 있는 기기끼리 신호를 주고받을 수 있게 함
  - 허브끼리 연결하여 허브의 포트수 제한을 해소할 수 있다

* 충돌 도메인
  - 허브는 신호를 증폭하고 재생은 하지만 그외의 **수신한 신호에 대해 어떤 제어도 하지 않음**
  - 플러딩(flooding) : 허브는 수신한 포트 이외의 모든 포트에 수신한 신호를 송신
  - 따라서 허브에 연결된 2대 이상의 컴퓨터에서 신호를 동시에 보내면 어딘가에서 신호가 부딪히게 된다
  - 이렇게 충돌이 발생할지도 모르는 범위를 **충돌 도메인** 이라고 한다
  - 허브로 연결되어 있는 컴퓨터는 충돌 도메인 범위 안에 있음

* 정리
  - 허브는 신호의 증폭과 재생을 수행하고 다수의 컴퓨터를 연결
  - 허브는 신호의 증폭과 재생 이외의 제어는 하지 않으며 플러딩을 한다
  - 충돌 도메인은 작아야 한다


---


### 14. 2계층의 역할과 개요
* 2계층의 개요
  - 허브에 연결만 되면 허브내의 모든 컴퓨터에 신호가 전달
  - 보내고 싶은 상대가 특정되어 있다면 어떻게 해야할까?
  - 2계층에서는 신호가 닿는 범위인 세그먼트 내에서의 데이터 전송에 관한 규정을 고려
  - **패킷 교환없이 케이블 분배기로 연결되는 범위가 세그먼트**

* 프레이밍과 신호의 동기
  - **1계층에서 다루는 신호와 케이블 등에 따라 2계층의 규격이 달라진다**
  - 프레이밍 : 1계층에서 주고받은 신호를 비트화해 거기에 의미를 주어 데이터로 취급할 수 있게 한다
  - 데이터 통신 직전에 프리엠블을 보내 데이터를 읽는 타이밍을 맞추는 비동기
  - 데이터를 송신하기 전에 1과 0을 교대로 하는 신호인 프리엠블을 보낸다.
  - 그러면 처음에는 타이밍이 어긋나 있어도 1과 0이 교대로 오는 것을 알고 있으니까 여기에서 타이밍을 맟춘다


---


### 15. 2계층 주소와 이더넷
* 주소와 캐스트
  - 주소 : 데이터를 보내는 상대와 자신을 특정하는 데이터
  - 데이터 전송 방법에 따라 주소의 종류는 3가지가 있다
      1) 유니캐스트 : 1대1 데이터 통신
      2) 브로드캐스트 : 1대 전체 데이터 통신
      3) 멀티캐스트 : 1대 다수(지정된 복수의 기기) 데이터 통신

* MAC 주소
  - 각각의 기기는 유니캐스트 주소를 적어도 한 개 갖고 있음
  - 유니캐스트 주소는 **고유의 값이다(중복x)**
  - 반면 멀티캐스트 주소는 같은 주소를 가진 기기가 여려 개 존재 가능
  - 이더넷에서 사용되는 주소는 **MAC 주소(Media Access Control Address)라고 불리는 주소**
  - 이 주소는 **인터페이스에 지정된 고정 주소** 이다
  - 인터페이스가 고장나서 교체하면 새로운 인터페이스에 할당된 MAC주소로 변한다

* 정리
  - 1대 1인 유니캐스트, 1대 전체인 브로드캐스트, 1대 다수인 멀티캐스트가 있다
  - 기기는 한 개 이상의 유니캐스트 주소를 가진다
  - 이더넷에서는 MAC 주소가 사용


---


### 16. 이더넷
* 이더넷 프레임
  - LAN에서의 2계층은 이더넷이라는 규칙이 적용
  - MAC 주소를 사용해서 누구로부터 어디로를 결정한다
  - 이 주소 정보를 헤더에 붙여서 데이터를 송신
  - 이더넷에서는 **이더넷 헤더와 이더넷 트레일러를 데이터그램에 붙여서** 이더넷 프레임으로 캡슐화한다
  - 이 이더넷 프레임이 신호가 돼서 케이블로 전달
  - 이더넷 프레임
      1) 최소 64바이트 ~ 최대 1,51864바이트
      2) 이더넷 헤더(14바이트) : 수신서 MAC주소 + 송신처 MAC주소 + 타입(페이로드의 내용을 식별)
      3) 페이로드 : 이더넷 헤더와 트레일러에 의해 캡슐화 되는 3계층 PDU
      4) 이더넷 트레일러(4바이트) : FCS(에러를 체크만 한다, 통신중에는 에러를 올바른 값으로 수정할 수는 없다)
  - FCS에서 에러가 발견된 프레임은 파기한다. 그 시점에서 버려지고 파기했다는 것은 송신측에 알리지 않는다

* 이더넷 동작
  - 허브를 사용한 멀티엑세스 네트워크의 경우는 신호, 즉 데이터는 모든 기기에 도달하게 된다
  - 이더넷에서는 수신한 프레임의 수신처 MAC 주소를 보고 자기에게 온 것 외의 다른 프레임을 파기
  - 허브를 사용한 멀티엑세스 네트워크의 경우 신호를 동시에 보내면 도중에서 신호가 충돌해서 읽을 수 없게 될 가능성이 생김
  - 이더넷에서는 **신호를 보내는 타이밍을 겹치지 않도록 비켜나게함** 으로써 되도록 충돌이 일어나지 않도록 함
  - 이를 위해서 **CSMA/CD라는 액세스 제어** 를 시행

* 정리
  - 이더넷에서는 수신처와 송신처의 MAC 주소, 에러체크 등을 헤더, 트레일러로 붙인다
  - 수신한 프레임의 수신처가 자기가 아닌 경우는 파기
  - 가능한 한 충돌을 막기 위해 CSMA/CD를 사용


---


### 17. 스위치
* 허브와 스위치
  - 충돌 도메인 컴퓨터의 수가 많으면, 송신->충돌->재송신->충돌 같은 일이 일어나서 **효율이 아주 나쁜 상태** 가 된다
  - 충돌이 발생하지 않도록 하기 위한 방법
      1) 신호를 보내는 타이밍이 겹치지 않도록 엇갈리게 하는 방법
      2) **신호가 지나는 길을 나누는 방법** -> 스위치(스위칭 허브)
  - 허브 대신 스위치를 사용
      1) 허브와 마찬가지로 복수의 포트를 가지고 있음
      2) 현재 LAN에서 사용되고 있는 UTP나 광파이버 케이블은 **송신신호** 와 **수신신호** 가 나뉘어 있다.
      3) 따라서 케이블상에서는 자신이 송신한 신호와 상대가 보내 온 신호가 동시에 지나가도 충돌은 발생하지 않는다
  - 충돌은 허브에서 발생
      1) 허브가 동시에 2개 이상의 기기로부터 신호를 수신하면 허브는 그것들을 나누어서 보낼 수 없음. 여기서 충돌이 발생

* MAC 주소 필터링
  - 스위치 안에서 **수신한 프레임을 따로따로 보낼 수 있도록 처리** 해서 충돌을 막는다
  - **MAC 주소 필터링과 버퍼링 2가지 방법이 존재**
  - MAC 주소 필터링
      1) 학습과 스위칭이라는 동작으로 이루어짐
      2) 학습 : 수신한 프레임의 송신처 MAC 주소를 기록
      3) 이것으로 수신한 포트와 MAC 주소를 연관 짓는다
      4) 학습에 의해 스위치는 포트에 연결되어 있는 컴퓨터의 MAC 주소를 기억
  - 이 동작은 MAC 주소에 의해 송신하는 포트를 필터링하기 때문에 MAC 주소 필터링이라 한다
  - 학습전의 MAC 주소 수신의 프레임을 수신한 경우 허브와 마찬가지로 플러딩을 한다

* 정리
  - 충돌은 허브에서 발생
  - 스위치는 MAC 주소 필터링과 버퍼링으로 충돌을 방지
  - 수신처 MAC 주소에 대응한 포트에만 프레임을 송신하는 것이 MAC 주소 필터링


  ---


### 18. 전이중 이더넷
* 버퍼링
  - 스위치는 **MAC 주소 필터링** 으로 **수신처가 다른 프레임이 동시에 스위치에 도달해서 충돌을 일으키지 않게 했다**
  - 수신처가 같은 프레임이 동시에 도달하면 어떻게 되는가?
  - **버퍼링** 으로 충돌 방지
      1) 버퍼(Buffer)를 사용한 처리를 실행
      2) 버퍼는 일시적으로 데이터를 기록해 둘 수 있는 메모리
  - 수신처가 같은 프레임이 동시에 도달할 경우
      1) 그 수신처가 연결되어 있는 포트로부터 데이터를 송신하려고 한다
      2) 하지만 포트는 1개인데 프레임이 2개이므로 이 시점에서 충돌이 발생
      3) 그래서 **충돌할 것 같은 프레임을 버퍼에 일시적으로 저장해둔다**
      4) 한 개는 송신하고 나머지 한 개는 버퍼에 저장
      5) 첫 번째 프레임 송신이 끝나면 저장해 두었던 프레임을 송신
  - 만약 버퍼의 용량이 부족하다면?
      1) **백 프레셔(Back Pressure)** 또는 **IEEE802.3x** 라는 규격을 사용해서 송신을 중단
  - 스위치의 결론적 역할
      1) **충돌 도메인은 기기들에서 충돌 가능성이 있다** 는 범위를 나타냄
      2) 그런데 스위치를 사용하면 충돌이 발생하기 않는다. 즉, **충돌 도메인은 스위치에 의해 분할됨**
      3) 스위치는 충돌 도메인을 축소시켜 데이터 통신 효율을 높인다

* 전이중 이더넷
  - **반이중 통신(Half Duplex)** : 자기가 송신 중일 때는 수신 불가능한 통신 방식
  - CSMA/CD는 반이중 통신
  - **전이중 통신(Full Duplex)** : 동시에 송신과 수신이 가능한 통신 방식
  - 스위치를 사용한 경우에는 충돌 염려가 없으므로 CSMA/CD를 사용할 필요가 없음
  - 따라서 전이중 통신 가능
  - 스위치를 사용해 전이중 통신을 하는 것을 **전이중 이더넷** 이라고 한다

* 정리
  - 버퍼링으로 수신처가 같은 프레임의 충돌을 방지
  - 스위치를 사용함으로써 CSMD/CD를 사용할 필요가 없어서 전이중 이더넷이 가능
